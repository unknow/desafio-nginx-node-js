services:

  app:
    build: 
      context: ./node
      dockerfile: Dockerfile
    container_name: app
    entrypoint: dockerize -wait tcp://db:3306 -timeout 20s
    command: npm start
    networks: 
      - app-network
    volumes:
      - ./node/src:/usr/src/app/src
    tty: true
    ports: 
      - "3000:3000"
    depends_on: 
       - db

  db:
    image: mysql:8.4
    command: --innodb-use-native-aio=0
    container_name: db
    restart: always
    tty: true
    volumes: 
      - ./mysql/data:/var/lib/mysql
      - ./mysql/init-scripts:/docker-entrypoint-initdb.d
      - ./mysql/my.cnf:/etc/mysql/conf.d/my.cnf:ro
    environment: 
      - MYSQL_DATABASE=nodedb
      - MYSQL_ROOT_PASSWORD=root
    networks: 
      - app-network

  nginx:
    build: 
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx
    networks: 
      - app-network
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    ports: 
      - "8080:80"
    depends_on:
      - db
      - app

networks: 
  app-network:
    driver: bridge
